basePath: /
definitions:
  api.AddSongRequest:
    properties:
      group:
        type: string
      song:
        type: string
    required:
    - group
    - song
    type: object
  api.UpdateSongRequest:
    properties:
      group:
        type: string
      link:
        type: string
      release_date:
        type: string
      song:
        type: string
      text:
        type: string
    required:
    - group
    - song
    type: object
  models.Song:
    properties:
      created_at:
        type: string
      group:
        type: string
      id:
        type: integer
      link:
        type: string
      release_date:
        type: string
      song:
        type: string
      text:
        type: string
      updated_at:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API for managing music library
  title: Music Library API
  version: "1.0"
paths:
  /songs:
    get:
      description: Retrieve songs with optional filtering by group, song, releaseDate
        and pagination
      parameters:
      - description: Filter by group
        in: query
        name: group
        type: string
      - description: Filter by song
        in: query
        name: song
        type: string
      - description: Filter by release date
        in: query
        name: releaseDate
        type: string
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Items per page
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Song'
            type: array
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get list of songs with filtering and pagination
      tags:
      - songs
    post:
      consumes:
      - application/json
      description: Add a new song to the library, fetching additional details from
        an external API
      parameters:
      - description: Song data
        in: body
        name: song
        required: true
        schema:
          $ref: '#/definitions/api.AddSongRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Returns the ID of the created song
          schema:
            additionalProperties:
              type: integer
            type: object
        "400":
          description: Invalid request body
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new song
      tags:
      - songs
  /songs/{id}:
    delete:
      description: Delete a song by ID
      parameters:
      - description: Song ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success message
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid song ID
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a song
      tags:
      - songs
    put:
      consumes:
      - application/json
      description: Update song details
      parameters:
      - description: Song ID
        in: path
        name: id
        required: true
        type: integer
      - description: Song data
        in: body
        name: song
        required: true
        schema:
          $ref: '#/definitions/api.UpdateSongRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success message
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update a song
      tags:
      - songs
  /songs/{id}/verses:
    get:
      description: Retrieve text of a song with pagination by verses
      parameters:
      - description: Song ID
        in: path
        name: id
        required: true
        type: integer
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 1
        description: Verses per page
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Returns the verses
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid song ID
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get verses of a song with pagination
      tags:
      - songs
swagger: "2.0"
